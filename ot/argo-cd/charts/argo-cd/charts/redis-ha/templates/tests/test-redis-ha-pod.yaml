---
# Source: argo-cd/charts/argo-cd/charts/redis-ha/templates/tests/test-redis-ha-pod.yaml
apiVersion: v1
kind: Pod
metadata:
  name: argocd-redis-ha-service-test
  namespace: "default"
  labels:
    app: redis-ha
    heritage: "Helm"
    release: "argocd"
    chart: redis-ha-4.23.0
  annotations:
    "helm.sh/hook": test-success
spec:
  nodeSelector:
    {}
  tolerations:
    []
  containers:
  - name: "argocd-service-test"
    image: public.ecr.aws/docker/library/redis:7.0.15-alpine
    command:
      - sh
      - -c
      - redis-cli -h argocd-redis-ha-haproxy -p 6379 info server
    resources: 
      {}
    securityContext: 
      allowPrivilegeEscalation: false
      capabilities:
        drop:
        - ALL
      readOnlyRootFilesystem: true
      runAsNonRoot: true
      runAsUser: 1000
      seccompProfile:
        type: RuntimeDefault
  restartPolicy: Never
---
# Source: argo-cd/charts/argo-cd/charts/redis-ha/templates/tests/test-redis-ha-pod.yaml
apiVersion: v1
kind: Pod
metadata:
  name: argocd-redis-ha-service-test
  namespace: "default"
  labels:
    app: redis-ha
    heritage: "Helm"
    release: "argocd"
    chart: redis-ha-4.23.0
  annotations:
    "helm.sh/hook": test-success
spec:
  nodeSelector:
    {}
  tolerations:
    []
  containers:
  - name: "argocd-service-test"
    image: public.ecr.aws/docker/library/redis:7.0.15-alpine
    command:
      - sh
      - -c
      - redis-cli -h argocd-redis-ha-haproxy -p 6379 info server
    resources: 
      {}
    securityContext: 
      allowPrivilegeEscalation: false
      capabilities:
        drop:
        - ALL
      readOnlyRootFilesystem: true
      runAsNonRoot: true
      runAsUser: 1000
      seccompProfile:
        type: RuntimeDefault
  restartPolicy: Never
